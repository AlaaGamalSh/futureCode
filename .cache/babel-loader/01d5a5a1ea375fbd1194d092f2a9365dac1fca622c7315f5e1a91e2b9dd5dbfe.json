{"ast":null,"code":"import _mock from \"../_mock\";\nconst status = ['avalible', 'busy'];\nexport const _pendingBranchesList = [...Array(24)].map((_, index) => ({\n  name: 'Branch',\n  status: status[Math.trunc(Math.random() * status.length)],\n  location: 'St Georgica Terrace, Perth',\n  total_order: _mock.number.age(index),\n  completed_order: _mock.number.age(index),\n  reviews: _mock.number.age(index)\n}));\nexport const _BranchesDailyPerformanceList = [...Array(24)].map((_, index) => ({\n  name: truncate(_mock.company(index), 15),\n  status: \"active\",\n  total: _mock.number.age(index) * 2,\n  completed: _mock.number.age(index),\n  messages: _mock.number.age(index)\n}));\nexport const _BranchesMonthlyPerformanceList = [...Array(24)].map((_, index) => ({\n  name: truncate(_mock.company(index), 15),\n  location: truncate(_mock.address.fullAddress(index), 20),\n  total: _mock.number.age(index) * 5,\n  completed: _mock.number.age(index) * 4,\n  cancelled: _mock.number.age(index),\n  revenue: _mock.number.age(index),\n  review: _mock.number.age(index) * 3\n}));\nexport const _BranchesPerformanceList = [...Array(24)].map((_, index) => ({\n  name: truncate(_mock.company(index), 15),\n  invoice_id: _mock.id(index),\n  withdrawal_and_deposit_date: \"20.Jun.2022\",\n  total: _mock.number.age(index) * 5,\n  due_date: \"20.Jun.2022\",\n  status: \"paid\",\n  invoice_type: \"type\",\n  legate: \"legate Name\"\n}));\n\n//-----------------------------------------------\n\n// truncate function to trim string to specific length\nfunction truncate(string, n) {\n  return (string === null || string === void 0 ? void 0 : string.length) > n ? string.substr(0, n) + \"...\" : string;\n}","map":{"version":3,"names":["_mock","status","_pendingBranchesList","Array","map","_","index","name","Math","trunc","random","length","location","total_order","number","age","completed_order","reviews","_BranchesDailyPerformanceList","truncate","company","total","completed","messages","_BranchesMonthlyPerformanceList","address","fullAddress","cancelled","revenue","review","_BranchesPerformanceList","invoice_id","id","withdrawal_and_deposit_date","due_date","invoice_type","legate","string","n","substr"],"sources":["C:/Users/PC/Desktop/food-new-admin/src/_mock/arrays/_branches.js"],"sourcesContent":["import _mock from \"../_mock\";\r\n\r\nconst status = ['avalible', 'busy']\r\nexport const _pendingBranchesList = [...Array(24)].map((_, index) => ({\r\n  name: 'Branch',\r\n  status: status[Math.trunc(Math.random() * status.length)],\r\n  location: 'St Georgica Terrace, Perth',\r\n  total_order: _mock.number.age(index),\r\n  completed_order: _mock.number.age(index),\r\n  reviews: _mock.number.age(index),\r\n}));\r\n\r\nexport const _BranchesDailyPerformanceList = [...Array(24)].map((_, index) => ({\r\n  name: truncate(_mock.company(index), 15),\r\n  status: \"active\",\r\n  total: _mock.number.age(index) * 2,\r\n  completed: _mock.number.age(index),\r\n  messages: _mock.number.age(index),\r\n}));\r\n\r\nexport const _BranchesMonthlyPerformanceList = [...Array(24)].map(\r\n  (_, index) => ({\r\n    name: truncate(_mock.company(index), 15),\r\n    location: truncate(_mock.address.fullAddress(index), 20),\r\n    total: _mock.number.age(index) * 5,\r\n    completed: _mock.number.age(index) * 4,\r\n    cancelled: _mock.number.age(index),\r\n    revenue: _mock.number.age(index),\r\n    review: _mock.number.age(index) * 3,\r\n  })\r\n);\r\n\r\nexport const _BranchesPerformanceList = [...Array(24)].map((_, index) => ({\r\n  name: truncate(_mock.company(index), 15),\r\n  invoice_id: _mock.id(index),\r\n  withdrawal_and_deposit_date: \"20.Jun.2022\",\r\n  total: _mock.number.age(index) * 5,\r\n  due_date: \"20.Jun.2022\",\r\n  status: \"paid\",\r\n  invoice_type: \"type\",\r\n  legate: \"legate Name\",\r\n}));\r\n\r\n//-----------------------------------------------\r\n\r\n// truncate function to trim string to specific length\r\nfunction truncate(string, n) {\r\n  return string?.length > n ? string.substr(0, n) + \"...\" : string;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}