{"ast":null,"code":"import _toConsumableArray from\"C:/Users/PC/Desktop/food-new-admin/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _mock from\"../_mock\";import{randomNumberRange,randomInArray}from\"../utils\";// ----------------------------------------------------------------------\nexport var _userAbout={id:_mock.id(1),cover:_mock.image.cover(1),role:\"UI Designer\",follower:randomNumberRange(999,99999),following:randomNumberRange(999,99999),quote:\"Tart I love sugar plum I love oat cake. Sweet roll caramels I love jujubes. Topping cake wafer..\",country:_mock.address.country(1),email:_mock.email(1),company:_mock.company(1),school:_mock.company(2),socialLinks:{facebookLink:\"https://www.facebook.com/caitlyn.kerluke\",instagramLink:\"https://www.instagram.com/caitlyn.kerluke\",linkedinLink:\"https://www.linkedin.com/in/caitlyn.kerluke\",twitterLink:\"https://www.twitter.com/caitlyn.kerluke\"}};export var _userFollowers=_toConsumableArray(Array(18)).map(function(_,index){return{id:_mock.id(index),avatarUrl:_mock.image.avatar(index),name:_mock.name.fullName(index),country:_mock.address.country(index),isFollowed:_mock.boolean(index)};});export var _userFriends=_toConsumableArray(Array(18)).map(function(_,index){return{id:_mock.id(index),avatarUrl:_mock.image.avatar(index),name:_mock.name.fullName(index),role:_mock.role(index)};});export var _userGallery=_toConsumableArray(Array(12)).map(function(_,index){return{id:_mock.id(index),title:_mock.text.title(index),postAt:_mock.time(index),imageUrl:_mock.image.cover(index)};});export var _userFeeds=_toConsumableArray(Array(3)).map(function(_,index){return{id:_mock.id(index),author:{id:_mock.id(8),avatarUrl:_mock.image.avatar(1),name:\"Caitlyn Kerluke\"},isLiked:true,createdAt:_mock.time(index),media:_mock.image.cover(index),message:_mock.text.sentence(index),personLikes:_toConsumableArray(Array(36)).map(function(_,index){return{name:_mock.name.fullName(index),avatarUrl:_mock.image.avatar(index+2)};}),comments:index===2&&[]||[{id:_mock.id(7),author:{id:_mock.id(8),avatarUrl:_mock.image.avatar(randomInArray([2,3,4,5,6])||2),name:_mock.name.fullName(index+5)},createdAt:_mock.time(2),message:\"Praesent venenatis metus at\"},{id:_mock.id(9),author:{id:_mock.id(10),avatarUrl:_mock.image.avatar(randomInArray([7,8,9,10,11])||7),name:_mock.name.fullName(index+6)},createdAt:_mock.time(3),message:\"Etiam rhoncus. Nullam vel sem. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Sed lectus.\"}]};});export var _userCards=_toConsumableArray(Array(24)).map(function(_,index){return{id:_mock.id(index),avatarUrl:_mock.image.avatar(index),cover:_mock.image.cover(index),name:_mock.name.fullName(index),follower:randomNumberRange(999,99999),following:randomNumberRange(999,99999),totalPosts:randomNumberRange(999,99999),role:_mock.role(index)};});export var _userPayment=_toConsumableArray(Array(1)).map(function(_,index){return{id:_mock.id(index),cardNumber:[\"**** **** **** 1234\",\"**** **** **** 5678\",\"**** **** **** 7878\"][index],cardType:[\"master_card\",\"visa\",\"master_card\"][index]};});export var _userAddressBook=_toConsumableArray(Array(1)).map(function(_,index){return{id:_mock.id(index),name:_mock.name.fullName(index),phone:_mock.phoneNumber(index),country:_mock.address.country(index),state:\"New Hampshire\",city:\"East Sambury\",street:\"41256 Kamille Turnpike\",zipCode:\"85807\"};});export var _userInvoices=_toConsumableArray(Array(10)).map(function(_,index){return{id:_mock.id(index),createdAt:_mock.time(index),price:_mock.number.price(index)};});export var _userList=_toConsumableArray(Array(24)).map(function(_,index){return{id:_mock.id(index),name:_mock.name.fullName(index),company:_mock.company(index),phoneNumber:_mock.phoneNumber(index),email:_mock.email(index)};});","map":{"version":3,"names":["_mock","randomNumberRange","randomInArray","_userAbout","id","cover","image","role","follower","following","quote","country","address","email","company","school","socialLinks","facebookLink","instagramLink","linkedinLink","twitterLink","_userFollowers","_toConsumableArray","Array","map","_","index","avatarUrl","avatar","name","fullName","isFollowed","boolean","_userFriends","_userGallery","title","text","postAt","time","imageUrl","_userFeeds","author","isLiked","createdAt","media","message","sentence","personLikes","comments","_userCards","totalPosts","_userPayment","cardNumber","cardType","_userAddressBook","phone","phoneNumber","state","city","street","zipCode","_userInvoices","price","number","_userList"],"sources":["C:/Users/PC/Desktop/food-new-admin/src/_mock/arrays/_user.js"],"sourcesContent":["import _mock from \"../_mock\";\nimport { randomNumberRange, randomInArray } from \"../utils\";\n\n// ----------------------------------------------------------------------\n\nexport const _userAbout = {\n  id: _mock.id(1),\n  cover: _mock.image.cover(1),\n  role: \"UI Designer\",\n  follower: randomNumberRange(999, 99999),\n  following: randomNumberRange(999, 99999),\n  quote:\n    \"Tart I love sugar plum I love oat cake. Sweet roll caramels I love jujubes. Topping cake wafer..\",\n  country: _mock.address.country(1),\n  email: _mock.email(1),\n  company: _mock.company(1),\n  school: _mock.company(2),\n  socialLinks: {\n    facebookLink: `https://www.facebook.com/caitlyn.kerluke`,\n    instagramLink: `https://www.instagram.com/caitlyn.kerluke`,\n    linkedinLink: `https://www.linkedin.com/in/caitlyn.kerluke`,\n    twitterLink: `https://www.twitter.com/caitlyn.kerluke`,\n  },\n};\n\nexport const _userFollowers = [...Array(18)].map((_, index) => ({\n  id: _mock.id(index),\n  avatarUrl: _mock.image.avatar(index),\n  name: _mock.name.fullName(index),\n  country: _mock.address.country(index),\n  isFollowed: _mock.boolean(index),\n}));\n\nexport const _userFriends = [...Array(18)].map((_, index) => ({\n  id: _mock.id(index),\n  avatarUrl: _mock.image.avatar(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n}));\n\nexport const _userGallery = [...Array(12)].map((_, index) => ({\n  id: _mock.id(index),\n  title: _mock.text.title(index),\n  postAt: _mock.time(index),\n  imageUrl: _mock.image.cover(index),\n}));\n\nexport const _userFeeds = [...Array(3)].map((_, index) => ({\n  id: _mock.id(index),\n  author: {\n    id: _mock.id(8),\n    avatarUrl: _mock.image.avatar(1),\n    name: \"Caitlyn Kerluke\",\n  },\n  isLiked: true,\n  createdAt: _mock.time(index),\n  media: _mock.image.cover(index),\n  message: _mock.text.sentence(index),\n  personLikes: [...Array(36)].map((_, index) => ({\n    name: _mock.name.fullName(index),\n    avatarUrl: _mock.image.avatar(index + 2),\n  })),\n  comments: (index === 2 && []) || [\n    {\n      id: _mock.id(7),\n      author: {\n        id: _mock.id(8),\n        avatarUrl: _mock.image.avatar(randomInArray([2, 3, 4, 5, 6]) || 2),\n        name: _mock.name.fullName(index + 5),\n      },\n      createdAt: _mock.time(2),\n      message: \"Praesent venenatis metus at\",\n    },\n    {\n      id: _mock.id(9),\n      author: {\n        id: _mock.id(10),\n        avatarUrl: _mock.image.avatar(randomInArray([7, 8, 9, 10, 11]) || 7),\n        name: _mock.name.fullName(index + 6),\n      },\n      createdAt: _mock.time(3),\n      message:\n        \"Etiam rhoncus. Nullam vel sem. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Sed lectus.\",\n    },\n  ],\n}));\n\nexport const _userCards = [...Array(24)].map((_, index) => ({\n  id: _mock.id(index),\n  avatarUrl: _mock.image.avatar(index),\n  cover: _mock.image.cover(index),\n  name: _mock.name.fullName(index),\n  follower: randomNumberRange(999, 99999),\n  following: randomNumberRange(999, 99999),\n  totalPosts: randomNumberRange(999, 99999),\n  role: _mock.role(index),\n}));\n\nexport const _userPayment = [...Array(1)].map((_, index) => ({\n  id: _mock.id(index),\n  cardNumber: [\n    \"**** **** **** 1234\",\n    \"**** **** **** 5678\",\n    \"**** **** **** 7878\",\n  ][index],\n  cardType: [\"master_card\", \"visa\", \"master_card\"][index],\n}));\n\nexport const _userAddressBook = [...Array(1)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  phone: _mock.phoneNumber(index),\n  country: _mock.address.country(index),\n  state: \"New Hampshire\",\n  city: \"East Sambury\",\n  street: \"41256 Kamille Turnpike\",\n  zipCode: \"85807\",\n}));\n\nexport const _userInvoices = [...Array(10)].map((_, index) => ({\n  id: _mock.id(index),\n  createdAt: _mock.time(index),\n  price: _mock.number.price(index),\n}));\n\nexport const _userList = [...Array(24)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  company: _mock.company(index),\n  phoneNumber: _mock.phoneNumber(index),\n  email: _mock.email(index),\n}));\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}